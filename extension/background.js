// ==UserScript==
// @name         YouTube Cookie Exporter
// @namespace    http://tampermonkey.net/
// @version      1.1
// @description  Adds an "Export Cookies" button to YouTube to download your cookies as a cookies.txt file.
// @author       Your Name
// @match        *://*.youtube.com/*
// @grant        none
// @license      MIT
// ==/UserScript==

(function() {
    'use strict';

    // --- Core Functions ---

    /**
     * Triggers a browser download for the given text content.
     * @param {string} text - The content to be downloaded.
     * @param {string} filename - The name of the file to be saved.
     */
    const downloadFile = (text, filename) => {
        const blob = new Blob([text], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    };

    /**
     * Converts an array of browser cookie objects to the Netscape format.
     * @param {Array<Object>} cookies - An array of cookie objects.
     * @returns {string} The cookies formatted as a string.
     */
    const formatCookiesToNetscape = (cookies) => {
        const header = "# Netscape HTTP Cookie File\n# Generated by YouTube Cookie Exporter Userscript\n\n";
        const lines = cookies.map(cookie => {
            const domain = cookie.domain;
            const includeSubdomains = cookie.domain.startsWith('.') ? 'TRUE' : 'FALSE';
            const path = cookie.path;
            const secure = cookie.secure ? 'TRUE' : 'FALSE';
            const expires = cookie.expires ? Math.floor(cookie.expires / 1000) : 0;
            const name = cookie.name;
            const value = cookie.value;
            return `${domain}\t${includeSubdomains}\t${path}\t${secure}\t${expires}\t${name}\t${value}`;
        });
        return header + lines.join('\n');
    };

    /**
     * The main function that is triggered when the button is clicked.
     */
    const exportCookiesAction = async () => {
        const button = document.getElementById('cookie-exporter-button');
        try {
            if (!window.cookieStore) {
                alert("Error: This browser does not support the 'cookieStore' API.");
                return;
            }
            button.textContent = 'Exporting...';
            button.disabled = true;

            const allCookies = await cookieStore.getAll();
            const youtubeCookies = allCookies.filter(c => c.domain.includes('youtube.com'));

            if (youtubeCookies.length === 0) {
                alert("No YouTube cookies found. Are you logged in?");
                return;
            }

            const netscapeFormattedCookies = formatCookiesToNetscape(youtubeCookies);
            downloadFile(netscapeFormattedCookies, 'cookies.txt');

        } catch (error) {
            console.error("Cookie Export Error:", error);
            alert("Failed to export cookies. See the browser console (F12) for details.");
        } finally {
             setTimeout(() => {
                button.textContent = 'Export Cookies';
                button.disabled = false;
            }, 1000);
        }
    };


    // --- Button Creation and Styling ---

    // Create the button element
    const exportButton = document.createElement('button');
    exportButton.id = 'cookie-exporter-button';
    exportButton.textContent = 'Export Cookies';

    // Style the button
    Object.assign(exportButton.style, {
        position: 'fixed',
        bottom: '15px',
        right: '15px',
        zIndex: '9999',
        padding: '10px 15px',
        backgroundColor: '#007bff',
        color: 'white',
        border: 'none',
        borderRadius: '5px',
        cursor: 'pointer',
        fontSize: '14px',
        boxShadow: '0 2px 5px rgba(0,0,0,0.2)'
    });

    // Add a hover effect
    exportButton.onmouseover = () => { exportButton.style.backgroundColor = '#0056b3'; };
    exportButton.onmouseout = () => { exportButton.style.backgroundColor = '#007bff'; };


    // Attach the click event listener
    exportButton.addEventListener('click', exportCookiesAction);

    // Add the button to the page
    document.body.appendChild(exportButton);

    console.log('YouTube Cookie Exporter button has been added to the page.');

})();